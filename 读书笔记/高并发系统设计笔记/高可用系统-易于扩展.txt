1.为什么提升扩展性很复杂?
  (1)比方说，你系统的流量是每秒 1000 次请求，对数据库的请求量也是每秒 1000 次。如果流量增加 10 倍，虽然系统可以通过扩容正常服务，数据库却成了瓶颈。
  (2)再比方说，单机网络带宽是 50Mbps，那么如果扩容到 30 台机器，前端负载均衡的带宽就超过了千兆带宽的限制，也会成为瓶颈点。
  (3)其实，无状态的服务和组件更易于扩展，而像 MySQL 这种存储服务是有状态的，就比较难以扩展。因为向存储集群中增加或者减少机器时，会涉及大量数据的迁移，
  而一般传统的关系型数据库都不支持。

2.需要考虑的地方?
  我们需要站在整体架构的角度，而不仅仅是业务服务器的角度来考虑系统的扩展性 。
  所以说，数据库、缓存、依赖的第三方、负载均衡、交换机带宽等等都是系统扩展时需要考虑的因素。

3.高可扩展性的设计思路?
  部署方式: 负载均衡 ->APP(应用服务器) ->存储
  存储层的扩展性:分库,分表
  业务层扩展:按业务分池子,按业务类型,重要程度,内外网等分池子。


