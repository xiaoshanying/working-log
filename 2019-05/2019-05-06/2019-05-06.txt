现代IM系统的消息架构
1.IM后台涉及的技术栈
    分布式系统,移动端,网络通信,协议,安全,存储,搜索...
2.IM最核心的部分
    消息系统,消息系统最核心的功能是消息的同步,存储,检索。
3.消息的同步
    将消息完整,快速的从发送方传递到接收方,消息同步系统最重要的衡量指标就是消息传递的实时性,完整性,消息的规模.
    从功能上讲,至少要支持在线和离线的推送,高级的IM还支持多端同步。
4.消息的存储
    消息存储即消息的持久化保存，传统消息系统通常只能支持消息在接收端的本地存储，数据基本不具备可靠性。现代消息
    系统能支持消息在服务端的在线存储，功能上对应的就是『消息漫游』，消息漫游的好处是可以实现账号在任意端登陆查看所有历史消息。
5.消息的检索
    消息一般是文本，所以支持全文检索也是必备的能力之一。传统消息系统通常来说也是只能支持消息的本地检索，基于本
    地存储的消息数据来构建。而现在消息系统在能支持消息的在线存储后，也具备了消息的『在线检索』能力。
6.传统架构
    消息是先同步后存储。对于在线的用户，消息会直接实时同步到在线的接收方，消息同步成功后，并不会在服务端持久化。
    而对于离线的用户或者消息无法实时同步成功时，消息会持久化到离线库，当接收方重新连接后，会从离线库拉取所有未读消息。
    当离线库中的消息成功同步到接收方后，消息会从离线库中删除。传统的消息系统，服务端的主要工作是维护发送方和接收方的连
    接状态，并提供在线消息同步和离线消息缓存的能力，保证消息一定能够从发送方传递到接收方。服务端不会对消息进行持久化，
    所以也无法支持消息漫游。消息的持久化存储及索引同样只能在接收端本地实现，数据可靠性极低。
    (1)消息在线推送
    (2)对于离线的用户(或者推送失败的用户),消息存储到(离线消息库)
    (3)当离线用户上线,会从离线消息库拉取未读消息。
    (4)消息的索引是在本地构建存储。
7.现代架构
    (1)先存储后同步的好处是，如果接收方确认接收到了消息，那这条消息一定是已经在云端保存了。并且消息会有两个库来保存，
    一个是(消息存储库)，用于全量保存所有会话的消息，主要用于支持(消息漫游)。另一个是(消息同步库)，主要用于(接收方的多端同步)。
    消息从发送方发出后，经过服务端转发，服务端会先将消息保存到(消息存储库)，后保存到(消息同步库)。
    (2)完成消息的持久化保存后，对于在线的接收方，会直接选择在线推送。但在线推送并不是一个必须路径，只是一个更优的消息传递路径。
    对于在线推送失败或者离线的接收方，会有另外一个统一的消息同步方式。接收方会主动的向服务端拉取所有未同步消息，但接收方何时来同步
    以及会在哪些端来同步消息对服务端来说是未知的，所以要求服务端必须保存所有需要同步到接收方的消息，这是消息同步库的主要作用。
    (3)对于新的同步设备，会有消息漫游的需求，这是消息存储库的主要作用，在消息存储库中，可以拉取任意会话的全量历史消息。消息检索的
    实现依赖于对消息存储库内消息的索引，通常是一个近实时（NRT，near real time）的索引构建过程，这个索引同样是在线的。
    (4)现代架构的实现本质上是把传统架构内本地存储和索引都搬到云上，最大挑战是需要集中管理全量消息的存储和索引，带来的好处是能实现多端同步、
    消息漫游以及在线检索。
    (5)可以看到现代架构中最核心的就是两个消息库『消息同步库』和『消息存储库』，以及对『消息存储库』的『消息索引』的实现。
8.Timeline模型
    (1)每条消息对应一个顺序ID：每个消息拥有一个唯一的顺序ID（SequenceId），队列消息按 SequenceId 排序。
    (2)新消息写入能自动分配递增的顺序 ID，保证永远插入队尾：Timeline 中是根据同步位点也就是顺序 ID 来同步消息，所以需要保证新写入的
    消息数据的顺序 ID 绝对不能比已同步的消息的顺序 ID 还小，否则会导致数据漏同步，所以需要支持对新写入的数据自动分配比当前已存储的所有
    消息的顺序 ID 更大的顺序 ID 。
    (3)新消息写入也能自定义顺序 ID，满足自定义排序需求：上面提到的自动分配顺序 ID，主要是为了满足消息同步的需求，消息同步要求消息是根据
    『已同步』或是『已写入』的顺序来排序。而消息的存储，通常要求消息能根据会话顺序来排序，会话顺序通常由端的会话来决定，而不是服务端的同步
    顺序来定，这是两种顺序要求。
    (4)支持根据顺序 ID 的随机定位：可根据 SequenceId 随机定位到 Timeline 中的某个位置，从这个位置开始正序或逆序的读取消息，也可支持读
    取指定顺序ID的某条消息。
